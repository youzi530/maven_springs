黑马教程：
一、耦合：程序之间的依赖关系
        ·类之间的依赖
            ·第一步：使用反射来创建对象，而避免使用new关键字
            ·第二步：通过读取配置文件来获取要创建的对象全限定类名
        ·方法之间的依赖
    解耦：降低程序之间的依赖关系
    注意：编译期不依赖，运行时才依赖
    例子：sevlet层调用service层，service层调用dao层，耦合度极高
    操作：
        新建一个完整的servlet的项目构建的maven项目，不包括factory，然后运行ui里面的Client

二、Bean:可重用的组件
    javabean：用java编写的可重用的组件  javabean != 实体类

    解决方式：
    第一个：需要一个配置文件来配置我们的service和dao
        配置的内容：唯一标识key-value（两种）全限定类名
        ·xml（spring的时候用）
        ·properties(建议使用，简单)
    第二个：通过读取配置文件中的配置内容，反射创建对象

    操作：
        新建hiemabean.properties
        新建BeanFactory类，里面写
三、单例与多例
    ·servlet是单例；只被创建一次

    ·bean = Class.forName(beanPath).newInstance();则是多例的

四、其实呢，就是与其用new的方式来确定两个对象的关系时候，我们采取一种更加高效的方式来降低陈序的耦合度
    就是新建一个工厂来充当中介的角色来确定关系，削减程序的耦合度，不能完全的消除


五、接下来学习spring中的ioc，上面学习只是降低我们程序的耦合度，用的是我们自己的方式